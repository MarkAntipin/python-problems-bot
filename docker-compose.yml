version: "3.9"

services:
  app-backend:
    image: python-problems-bot
    command: ["python", "run_app.py"]
    networks:
      - bot_network
    restart: always
    env_file: .env
    depends_on:
      postgres:
        condition: service_started
      migrate:
        condition: service_completed_successfully
    ports:
      - "3779:3779"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  app-frontend:
    image: python-problems-bot-frontend
    volumes:
      - /var/app/python-problems-bot/:/home/node/app/dist
    networks:
      - bot_network
    env_file: .env
    depends_on:
      - app-backend
    command: ["npm", "run", "build"]

  bot:
    image: python-problems-bot
    command: ["python", "run_bot.py"]
    networks:
      - bot_network
    restart: always
    env_file: .env
    depends_on:
      postgres:
        condition: service_started
      migrate:
        condition: service_completed_successfully

  scheduler:
    image: python-problems-bot
    command: ["python", "run_scheduler.py"]
    networks:
      - bot_network
    restart: always
    env_file: .env
    depends_on:
      postgres:
        condition: service_started
      migrate:
        condition: service_completed_successfully

  migrate:
    image: migrate/migrate
    networks:
      - bot_network
    volumes:
      - ./backend/migrations:/migrations
    command: [
      "-path",
      "/migrations",
      "-database",
      "postgres://python-problems-bot:python-problems-bot@postgres:5432/python-problems-bot?sslmode=disable",
      "up"
    ]
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15.0-alpine
    networks:
      - bot_network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5436:5432"
    environment:
      POSTGRES_USER: python-problems-bot
      POSTGRES_PASSWORD: python-problems-bot # change on production
      POSTGRES_DB: python-problems-bot
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U python-problems-bot" ]
      interval: 5s
      timeout: 5s
      retries: 3

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.15.1
    container_name: filebeat
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    environment:
      - LOGSTASH_HOST=${LOGSTASH_HOST}
      - LOGSTASH_PORT=${LOGSTASH_PORT}
    networks:
      - bot_network
    depends_on:
      - app-backend
      - app-frontend
      - bot
      - scheduler

networks:
    bot_network:

volumes:
  postgres-data:
